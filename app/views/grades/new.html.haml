:javascript
  function createUploader(){
   var uploader = new qq.FileUploaderBasic({
       element: document.getElementById('file-upload'),
       params: {'assignment_assessment': {'a_id' : #{params[:id]}}},
       allowedExtensions: ['csv'],
       action: "/grades",
       button: document.getElementById('file-upload'),
       sizeLimit: 4194304,

       onProgress: function(id, fileName, loaded, total){
        var progress = Math.round(loaded / total * 100 );
         $('#fileInfo').text(fileName + ' ' + progress + '%');
       },

       messages: {
           typeError: "File of wrong extension",
           sizeError: "Filesize too large. Supported size is till 4 MB",
           emptyError: "Empty file loaded."
       },

       onSubmit: function(id, fileName){
        $('#file-upload').addClass("loading");
        $("#file-upload-spinner").removeClass("hidden");
       },

       onComplete: function(id, fileName, responseJSON){
        $("#file-upload-spinner").addClass("hidden");
        $('#fileInfo').text(fileName + ' completed').fadeOut(2000);
        $('#file-upload').removeClass("loading");
        if ( responseJSON.success = 'success')
        {
            $('#fileInfo').empty().append('<input type="hidden" value="' + filename + '">');
        }
        else
        {
          $('#fileInfo').text(responseJSON.message);
        }
        

        
       }
   });
  }
  
  $('#file-upload').click(function(){createUploader();});        

.span-15.last
  .span-3
    .icons-cog
  .span-12.last
    %h4
     Load a Course Grade for all students

  .span-10.append-1.last
    
    
    
    #create_assignment

      = form_for Assignment.new, html: {class: "new_conversation form_do_not_clear"}, remote: true do |assignment|
        
        %h5{:style => 'margin-bottom:0px;'}
          = "Title"    
        = text_field_tag 'assignment[name]', nil, :placeholder => 'Course/ Assignment / Grade name..', :size => '20'
        
        

        %h5{:style => 'margin-bottom:0px;display:none;'}
          Description  
        = hidden_tag 'assignment[description]', nil, :rows => '3', :placeholder => "What students need to do.."

        
        
        
        %h5.fieldWithErrors Points  
        = text_field_tag 'assignment[comments_count]', '10', :style => "width:7%;display:inline-block;margin-left:5px;"       
        %h5.fieldWithErrors{:style => 'margin-left:20px;display:none;'} 
          DueDate  
        = hidden_tag 'assignment[submission_date]', Time.now, :placeholder => "Due Date..", :class => 'jquery-ui-date', :size => '10', :style => "width:25%;display:inline-block;margin-left:5px;"       
 
        %div
          = hidden_tag 'assignment[file_upload]', 'true' , false, :style => 'float:left;'
          %span{:style => 'margin-left:4px;vertical-align:middle;display:none;'} Students will upload a file as part of submission
          
        #file-upload.button.creation
          = "Upload Grade File(.csv file only - [student id, points])"
         = image_tag('mobile-spinner.gif', :class => 'hidden', :style => "z-index:-1", :id => 'file-upload-spinner')
        %p
          #fileInfo
        %br
        %br

        %p
          = assignment.submit "Submit Grade", 'data-disable-with' => "In Progress..", :class => 'button creation'

      



  
  
 

  


