-#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

:javascript
  function removeObject(type,elt)
  {
    
    var assignment = $(elt).parent();
    var spandata = assignment.find('span:first-child')
    //alert(spandata.attr('data-id'));
    assignment.addClass('dim');
    $.ajax({
      url: '/' + type + '/'+ spandata.attr('data-id'),
      dataType: 'json',
      type: 'DELETE',
      success: function() {
        $.when(assignment.fadeOut(400)).then(function(){
          assignment.remove();
          //self.trigger('change');
        });
      }
    });
  }

-if publisher_explain
  :javascript
    $(document).ready(function() {
        if( app.publisher ) app.publisher.triggerGettingStarted();
      });

  

%div{:style => "padding: 15px 0px 0px 12px;"}
  %ul{:style => "list-style:none;padding: 0px;margin:0px"}
    %li{:style => "display:inline-block;margin-right:12px;"}
      = image_tag 'icons/marker.png', :alt => t('.upload_photos').titleize,:class => 'publisher_image'
      %a{ :href => "#",:onClick => "$('.status-message-area').hide();$('#publisher_textarea_wrapper').show();"}
        %span
          %i 
            = "Update Status"
    %li{:style => "display:inline-block;margin-right:12px;"}
      = image_tag 'icons/plus.png', :alt => t('.upload_photos').titleize,:class => 'publisher_image'
      %a{ :href => "#", :onClick => "$('.status-message-area').hide();$('#file_upload_wrapper').show();"}
        %span
          %i 
            = "Add a Doc"
    %li{:style => "display:inline-block;margin-right:12px;"}
      = image_tag 'icons/bookmark.png', :alt => t('.upload_photos').titleize,:class => 'publisher_image'
      %a{ :href => "#", :onClick => "$('.status-message-area').hide();$('#assignment_wrapper').show();"}
        %span
          %i 
            = "Assignment"
    
    %li{:style => "display:inline-block;"}
      = image_tag 'icons/question.png', :alt => t('.upload_photos').titleize,:class => 'publisher_image'
      %a{ :href => "#", :onClick => "$('.status-message-area').hide();$('#quiz_wrapper').show();"}
        %span
          %i 
            = "Post a Quiz"
%p
  - unless current_user.person.role.nil? 
    = current_user.person.role.name    
#publisher{:class => ((aspect == :profile || publisher_open) ? "mention_popup" : "closed")}
  .content_creation
    = form_for(StatusMessage.new) do |status|
      = status.error_messages
      %div
        %params
          #fileInfo
          #publisher_textarea_wrapper.status-message-area
            = link_to(content_tag(:div, nil, :class => 'icons-deletelabel'), "#", :id => "hide_publisher", :title => t('.discard_post'))
            %ul#photodropzone
            - if current_user.getting_started?
              = status.text_area :fake_text, :rows => 2, :value => h(publisher_formatted_text), :tabindex => 1, :placeholder => "#{t('contacts.index.start_a_conversation')}...",
                :title => popover_with_close_html( '1. ' + t('shared.public_explain.share') ),
                'data-content' => t('shared.public_explain.new_user_welcome_message')
            - else
              = status.text_area :fake_text, :rows => 2, :value => h(publisher_formatted_text), :tabindex => 1, :placeholder => "#{t('contacts.index.start_a_conversation')}..."
            = status.hidden_field :text, :value => h(publisher_hidden_text), :class => 'clear_on_submit'

            #publisher-images
              #file-upload.btn{:title => t('.upload_photos')}
                = image_tag 'icons/camera.png', :alt => t('.upload_photos').titleize
          
          #file_upload_wrapper.status-message-area{:style =>"display:none;border:1px sold #ccc"}                   
            %div
              %ul{:style =>"padding:0px;margin:0px;border:1px solid #ccc;"}
                %li#document-upload{:style =>"list-style:none;display:inline-block;width:42%;border-right:1px solid #ccc;padding:18px;vertical-align:middle;" }
                  %span{:style => "display:block;text-alight:center;" }
                    = "Upload a file"
                %li#library-file{:style => "list-style:none;display:inline-block;width:45%;vertical-align:middle;"}
                  %span{:style => "display:block;text-align:center;"}  
                    = "Add from Library"            
            %ul#documentdropzone     

          #assignment_wrapper.status-message-area{:style =>"display:none;border:1px sold #ccc"}         
            %div
              %ul{:style =>"padding:0px;margin:0px;border:1px solid #ccc;"}
                %li#assignment-upload{:style =>"list-style:none;display:inline-block;width:42%;border-right:1px solid #ccc;padding:18px;vertical-align:middle;" }
                  %span{:style => "display:block;text-alight:center;pading:15px 0px;" }
                    = link_to "Create a new assignment", '/assignments/new', :rel => 'facebox'
                %li{:style => "list-style:none;display:inline-block;width:45%;"}
                  %span{:style => "display:block;text-align:center;"}  
                    = link_to "Load an assignment", '/assignments/new', :rel => 'facebox'
            %ul#assignmentdropzone
          
          #quiz_wrapper.status-message-area{:style =>"display:none;border:1px sold #ccc"}         
            %div
              %ul{:style =>"padding:0px;margin:0px;border:1px solid #ccc;"}
                %li#quiz-upload{:style =>"list-style:none;display:inline-block;width:42%;border-right:1px solid #ccc;text-align:center;padding:18px;" }
                  %span{:style => "display:block;text-alight:center;" }
                    = link_to "Create a quiz", '/quizzes/new'
                %li{:style => "list-style:none;display:inline-block;width:45%;"}
                  %span{:style => "display:block;text-align:center;"}  
                    = link_to "Add a quiz from Library", '/quizzes/', :rel => 'facebox'
            %ul#quizdropzone  

               

      - if publisher_public
        = hidden_field_tag 'aspect_ids[]', "public"
      - elsif all_aspects_selected?(selected_aspects)
        = hidden_field_tag 'aspect_ids[]', "all_aspects"
      - else
        - for aspect_id in aspect_ids
          = hidden_field_tag 'aspect_ids[]', aspect_id.to_s

      .options_and_submit
        .public_toggle
          %span#publisher_service_icons
            - if current_user.services
              - for service in current_user.services
                = content_tag :div, nil,
                              :title => service.provider.titleize,
                              :class => "social_media_logos-#{service.provider}-16x16 service_icon dim",
                              :id    => "#{service.provider}",
                              :maxchar => "#{service.class::MAX_CHARACTERS}"
            %a{ :href => "#question_mark_pane", :class => 'question_mark', :rel => 'facebox', :title => t('shared.public_explain.manage') }
              .icons-monotone_wrench_settings

          .dropdown{ ! current_user.getting_started? ? {:class => "hang_right"} : { :class => "hang_right", :title => popover_with_close_html("2. #{t('shared.public_explain.control_your_audience')}"), 'data-content'=> t('shared.public_explain.visibility_dropdown')} }
            .button.toggle.publisher
              - if publisher_public
                = t('public')
              - elsif all_aspects_selected?(selected_aspects)
                = t('all_aspects')
              - elsif selected_aspects.size == 1
                = selected_aspects.first.name
              - else
                = t('shared.aspect_dropdown.toggle', :count => selected_aspects.size)
              &#9660;

            .wrapper
              %ul.dropdown_list{:unSelectable => 'on', 'data-person_id' => (person.id if defined?(person) && person), 'data-service_uid' => (service_uid if defined?(service_uid))}
                %li.public.radio{"data-aspect_id" => "public", :class => ("selected" if publisher_public)}
                  = t('public')

                %li.divider.all_aspects.radio{:style => "padding-bottom: 5px; border-bottom: 1px solid #ddd;", "data-aspect_id" => "all_aspects", :class => ("selected" if (!publisher_public && all_aspects_selected?(selected_aspects)))}
                  = t('all_aspects')

                - for aspect in all_aspects
                  = aspect_dropdown_list_item(aspect, !all_aspects_selected?(selected_aspects) && selected_aspects.include?(aspect) )

          %button{ :disabled => ("disabled" if publisher_hidden_text.blank?), :class => 'button post_preview_button'}
            = t('.preview') 

          = status.submit t('.share'), :disabled => publisher_hidden_text.blank?, :class => 'button creation', :tabindex => 2

          .facebox_content
            #question_mark_pane
              
    = link_to '', contacts_path(:aspect_ids => aspect_ids), :class => 'selected_contacts_link hidden'


    #publisher_photo_upload
      